"""
    Azure TRE API

    Welcome to the Azure TRE API - for more information about templates and workspaces see the [Azure TRE documentation](https://microsoft.github.io/AzureTRE)  # noqa: E501

    The version of the OpenAPI document: 0.2.14
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.http_validation_error import HTTPValidationError
from openapi_client.model.resource_template_information_in_list import ResourceTemplateInformationInList
from openapi_client.model.user_resource_template_in_create import UserResourceTemplateInCreate
from openapi_client.model.user_resource_template_in_response import UserResourceTemplateInResponse


class UserResourceTemplatesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.get_user_resource_template_by_name_and_workspace_service_api_workspace_service_templates_service_template_name_user_resource_templates_user_resource_template_name_get_endpoint = _Endpoint(
            settings={
                'response_type': (UserResourceTemplateInResponse,),
                'auth': [
                    'oauth2'
                ],
                'endpoint_path': '/api/workspace-service-templates/{service_template_name}/user-resource-templates/{user_resource_template_name}',
                'operation_id': 'get_user_resource_template_by_name_and_workspace_service_api_workspace_service_templates_service_template_name_user_resource_templates_user_resource_template_name_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'service_template_name',
                    'user_resource_template_name',
                    'is_update',
                ],
                'required': [
                    'service_template_name',
                    'user_resource_template_name',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'service_template_name':
                        (str,),
                    'user_resource_template_name':
                        (str,),
                    'is_update':
                        (bool,),
                },
                'attribute_map': {
                    'service_template_name': 'service_template_name',
                    'user_resource_template_name': 'user_resource_template_name',
                    'is_update': 'is_update',
                },
                'location_map': {
                    'service_template_name': 'path',
                    'user_resource_template_name': 'path',
                    'is_update': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_user_resource_templates_applicable_to_the_workspace_service_template_api_workspace_service_templates_service_template_name_user_resource_templates_get_endpoint = _Endpoint(
            settings={
                'response_type': (ResourceTemplateInformationInList,),
                'auth': [
                    'oauth2'
                ],
                'endpoint_path': '/api/workspace-service-templates/{service_template_name}/user-resource-templates',
                'operation_id': 'get_user_resource_templates_applicable_to_the_workspace_service_template_api_workspace_service_templates_service_template_name_user_resource_templates_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'service_template_name',
                ],
                'required': [
                    'service_template_name',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'service_template_name':
                        (str,),
                },
                'attribute_map': {
                    'service_template_name': 'service_template_name',
                },
                'location_map': {
                    'service_template_name': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.register_user_resource_template_api_workspace_service_templates_service_template_name_user_resource_templates_post_endpoint = _Endpoint(
            settings={
                'response_type': (UserResourceTemplateInResponse,),
                'auth': [
                    'oauth2'
                ],
                'endpoint_path': '/api/workspace-service-templates/{service_template_name}/user-resource-templates',
                'operation_id': 'register_user_resource_template_api_workspace_service_templates_service_template_name_user_resource_templates_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'service_template_name',
                    'user_resource_template_in_create',
                ],
                'required': [
                    'service_template_name',
                    'user_resource_template_in_create',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'service_template_name':
                        (str,),
                    'user_resource_template_in_create':
                        (UserResourceTemplateInCreate,),
                },
                'attribute_map': {
                    'service_template_name': 'service_template_name',
                },
                'location_map': {
                    'service_template_name': 'path',
                    'user_resource_template_in_create': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def get_user_resource_template_by_name_and_workspace_service_api_workspace_service_templates_service_template_name_user_resource_templates_user_resource_template_name_get(
        self,
        service_template_name,
        user_resource_template_name,
        **kwargs
    ):
        """Get User Resource Template By Name And Workspace Service  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_user_resource_template_by_name_and_workspace_service_api_workspace_service_templates_service_template_name_user_resource_templates_user_resource_template_name_get(service_template_name, user_resource_template_name, async_req=True)
        >>> result = thread.get()

        Args:
            service_template_name (str):
            user_resource_template_name (str):

        Keyword Args:
            is_update (bool): [optional] if omitted the server will use the default value of False
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            UserResourceTemplateInResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['service_template_name'] = \
            service_template_name
        kwargs['user_resource_template_name'] = \
            user_resource_template_name
        return self.get_user_resource_template_by_name_and_workspace_service_api_workspace_service_templates_service_template_name_user_resource_templates_user_resource_template_name_get_endpoint.call_with_http_info(**kwargs)

    def get_user_resource_templates_applicable_to_the_workspace_service_template_api_workspace_service_templates_service_template_name_user_resource_templates_get(
        self,
        service_template_name,
        **kwargs
    ):
        """Get User Resource Templates Applicable To The Workspace Service Template  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_user_resource_templates_applicable_to_the_workspace_service_template_api_workspace_service_templates_service_template_name_user_resource_templates_get(service_template_name, async_req=True)
        >>> result = thread.get()

        Args:
            service_template_name (str):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ResourceTemplateInformationInList
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['service_template_name'] = \
            service_template_name
        return self.get_user_resource_templates_applicable_to_the_workspace_service_template_api_workspace_service_templates_service_template_name_user_resource_templates_get_endpoint.call_with_http_info(**kwargs)

    def register_user_resource_template_api_workspace_service_templates_service_template_name_user_resource_templates_post(
        self,
        service_template_name,
        user_resource_template_in_create,
        **kwargs
    ):
        """Register User Resource Template  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.register_user_resource_template_api_workspace_service_templates_service_template_name_user_resource_templates_post(service_template_name, user_resource_template_in_create, async_req=True)
        >>> result = thread.get()

        Args:
            service_template_name (str):
            user_resource_template_in_create (UserResourceTemplateInCreate):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            UserResourceTemplateInResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['service_template_name'] = \
            service_template_name
        kwargs['user_resource_template_in_create'] = \
            user_resource_template_in_create
        return self.register_user_resource_template_api_workspace_service_templates_service_template_name_user_resource_templates_post_endpoint.call_with_http_info(**kwargs)

