/*
 * Azure TRE API
 *
 * Welcome to the Azure TRE API - for more information about templates and workspaces see the [Azure TRE documentation](https://microsoft.github.io/AzureTRE)
 *
 * The version of the OpenAPI document: 0.2.14
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TRE.Rest.Client.Client.OpenAPIDateConverter;

namespace TRE.Rest.Client.Model
{
    /// <summary>
    /// WorkspaceTemplateInResponse
    /// </summary>
    [DataContract(Name = "WorkspaceTemplateInResponse")]
    public partial class WorkspaceTemplateInResponse : IEquatable<WorkspaceTemplateInResponse>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets ResourceType
        /// </summary>
        [DataMember(Name = "resourceType", IsRequired = true, EmitDefaultValue = true)]
        public ResourceType ResourceType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkspaceTemplateInResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WorkspaceTemplateInResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WorkspaceTemplateInResponse" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="name">name (required).</param>
        /// <param name="title">title (default to &quot;&quot;).</param>
        /// <param name="description">description (required).</param>
        /// <param name="version">version (required).</param>
        /// <param name="resourceType">resourceType (required).</param>
        /// <param name="current">current (required).</param>
        /// <param name="type">type (default to &quot;object&quot;).</param>
        /// <param name="required">required (required).</param>
        /// <param name="properties">properties (required).</param>
        /// <param name="actions">actions.</param>
        /// <param name="customActions">customActions.</param>
        /// <param name="pipeline">pipeline.</param>
        /// <param name="additionalProperties">additionalProperties (default to false).</param>
        /// <param name="systemProperties">systemProperties (required).</param>
        public WorkspaceTemplateInResponse(string id = default(string), string name = default(string), string title = "", string description = default(string), string version = default(string), ResourceType resourceType = default(ResourceType), bool current = default(bool), string type = "object", Collection<string> required = default(Collection<string>), Dictionary<string, Property> properties = default(Dictionary<string, Property>), Collection<CustomAction> actions = default(Collection<CustomAction>), Collection<CustomAction> customActions = default(Collection<CustomAction>), Object pipeline = default(Object), bool additionalProperties = false, Dictionary<string, Property> systemProperties = default(Dictionary<string, Property>))
        {
            // to ensure "id" is required (not null)
            if (id == null) {
                throw new ArgumentNullException("id is a required property for WorkspaceTemplateInResponse and cannot be null");
            }
            this.Id = id;
            // to ensure "name" is required (not null)
            if (name == null) {
                throw new ArgumentNullException("name is a required property for WorkspaceTemplateInResponse and cannot be null");
            }
            this.Name = name;
            // to ensure "description" is required (not null)
            if (description == null) {
                throw new ArgumentNullException("description is a required property for WorkspaceTemplateInResponse and cannot be null");
            }
            this.Description = description;
            // to ensure "version" is required (not null)
            if (version == null) {
                throw new ArgumentNullException("version is a required property for WorkspaceTemplateInResponse and cannot be null");
            }
            this._Version = version;
            this.ResourceType = resourceType;
            this.Current = current;
            // to ensure "required" is required (not null)
            if (required == null) {
                throw new ArgumentNullException("required is a required property for WorkspaceTemplateInResponse and cannot be null");
            }
            this.Required = required;
            // to ensure "properties" is required (not null)
            if (properties == null) {
                throw new ArgumentNullException("properties is a required property for WorkspaceTemplateInResponse and cannot be null");
            }
            this.Properties = properties;
            // to ensure "systemProperties" is required (not null)
            if (systemProperties == null) {
                throw new ArgumentNullException("systemProperties is a required property for WorkspaceTemplateInResponse and cannot be null");
            }
            this.SystemProperties = systemProperties;
            // use default value if no "title" provided
            this.Title = title ?? "";
            // use default value if no "type" provided
            this.Type = type ?? "object";
            this.Actions = actions;
            this.CustomActions = customActions;
            this.Pipeline = pipeline;
            this.AdditionalProperties = additionalProperties;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", IsRequired = true, EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets _Version
        /// </summary>
        [DataMember(Name = "version", IsRequired = true, EmitDefaultValue = false)]
        public string _Version { get; set; }

        /// <summary>
        /// Gets or Sets Current
        /// </summary>
        [DataMember(Name = "current", IsRequired = true, EmitDefaultValue = true)]
        public bool Current { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Required
        /// </summary>
        [DataMember(Name = "required", IsRequired = true, EmitDefaultValue = false)]
        public Collection<string> Required { get; set; }

        /// <summary>
        /// Gets or Sets Properties
        /// </summary>
        [DataMember(Name = "properties", IsRequired = true, EmitDefaultValue = false)]
        public Dictionary<string, Property> Properties { get; set; }

        /// <summary>
        /// Gets or Sets Actions
        /// </summary>
        [DataMember(Name = "actions", EmitDefaultValue = false)]
        public Collection<CustomAction> Actions { get; set; }

        /// <summary>
        /// Gets or Sets CustomActions
        /// </summary>
        [DataMember(Name = "customActions", EmitDefaultValue = false)]
        public Collection<CustomAction> CustomActions { get; set; }

        /// <summary>
        /// Gets or Sets Pipeline
        /// </summary>
        [DataMember(Name = "pipeline", EmitDefaultValue = false)]
        public Object Pipeline { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalProperties
        /// </summary>
        [DataMember(Name = "additionalProperties", EmitDefaultValue = true)]
        public bool AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or Sets SystemProperties
        /// </summary>
        [DataMember(Name = "system_properties", IsRequired = true, EmitDefaultValue = false)]
        public Dictionary<string, Property> SystemProperties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WorkspaceTemplateInResponse {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  _Version: ").Append(_Version).Append("\n");
            sb.Append("  ResourceType: ").Append(ResourceType).Append("\n");
            sb.Append("  Current: ").Append(Current).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Required: ").Append(Required).Append("\n");
            sb.Append("  Properties: ").Append(Properties).Append("\n");
            sb.Append("  Actions: ").Append(Actions).Append("\n");
            sb.Append("  CustomActions: ").Append(CustomActions).Append("\n");
            sb.Append("  Pipeline: ").Append(Pipeline).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("  SystemProperties: ").Append(SystemProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WorkspaceTemplateInResponse);
        }

        /// <summary>
        /// Returns true if WorkspaceTemplateInResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of WorkspaceTemplateInResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WorkspaceTemplateInResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this._Version == input._Version ||
                    (this._Version != null &&
                    this._Version.Equals(input._Version))
                ) && 
                (
                    this.ResourceType == input.ResourceType ||
                    this.ResourceType.Equals(input.ResourceType)
                ) && 
                (
                    this.Current == input.Current ||
                    this.Current.Equals(input.Current)
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.Required == input.Required ||
                    this.Required != null &&
                    input.Required != null &&
                    this.Required.SequenceEqual(input.Required)
                ) && 
                (
                    this.Properties == input.Properties ||
                    this.Properties != null &&
                    input.Properties != null &&
                    this.Properties.SequenceEqual(input.Properties)
                ) && 
                (
                    this.Actions == input.Actions ||
                    this.Actions != null &&
                    input.Actions != null &&
                    this.Actions.SequenceEqual(input.Actions)
                ) && 
                (
                    this.CustomActions == input.CustomActions ||
                    this.CustomActions != null &&
                    input.CustomActions != null &&
                    this.CustomActions.SequenceEqual(input.CustomActions)
                ) && 
                (
                    this.Pipeline == input.Pipeline ||
                    (this.Pipeline != null &&
                    this.Pipeline.Equals(input.Pipeline))
                ) && 
                (
                    this.AdditionalProperties == input.AdditionalProperties ||
                    this.AdditionalProperties.Equals(input.AdditionalProperties)
                ) && 
                (
                    this.SystemProperties == input.SystemProperties ||
                    this.SystemProperties != null &&
                    input.SystemProperties != null &&
                    this.SystemProperties.SequenceEqual(input.SystemProperties)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.Title != null)
                {
                    hashCode = (hashCode * 59) + this.Title.GetHashCode();
                }
                if (this.Description != null)
                {
                    hashCode = (hashCode * 59) + this.Description.GetHashCode();
                }
                if (this._Version != null)
                {
                    hashCode = (hashCode * 59) + this._Version.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ResourceType.GetHashCode();
                hashCode = (hashCode * 59) + this.Current.GetHashCode();
                if (this.Type != null)
                {
                    hashCode = (hashCode * 59) + this.Type.GetHashCode();
                }
                if (this.Required != null)
                {
                    hashCode = (hashCode * 59) + this.Required.GetHashCode();
                }
                if (this.Properties != null)
                {
                    hashCode = (hashCode * 59) + this.Properties.GetHashCode();
                }
                if (this.Actions != null)
                {
                    hashCode = (hashCode * 59) + this.Actions.GetHashCode();
                }
                if (this.CustomActions != null)
                {
                    hashCode = (hashCode * 59) + this.CustomActions.GetHashCode();
                }
                if (this.Pipeline != null)
                {
                    hashCode = (hashCode * 59) + this.Pipeline.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.AdditionalProperties.GetHashCode();
                if (this.SystemProperties != null)
                {
                    hashCode = (hashCode * 59) + this.SystemProperties.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
