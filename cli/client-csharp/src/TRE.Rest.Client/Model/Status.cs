/*
 * Azure TRE API
 *
 * Welcome to the Azure TRE API - for more information about templates and workspaces see the [Azure TRE documentation](https://microsoft.github.io/AzureTRE)
 *
 * The version of the OpenAPI document: 0.2.14
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = TRE.Rest.Client.Client.OpenAPIDateConverter;

namespace TRE.Rest.Client.Model
{
    /// <summary>
    /// Operation status
    /// </summary>
    /// <value>Operation status</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum Status
    {
        /// <summary>
        /// Enum Failed for value: failed
        /// </summary>
        [EnumMember(Value = "failed")]
        Failed = 1,

        /// <summary>
        /// Enum Deleted for value: deleted
        /// </summary>
        [EnumMember(Value = "deleted")]
        Deleted = 2,

        /// <summary>
        /// Enum Deployed for value: deployed
        /// </summary>
        [EnumMember(Value = "deployed")]
        Deployed = 3,

        /// <summary>
        /// Enum Deleting for value: deleting
        /// </summary>
        [EnumMember(Value = "deleting")]
        Deleting = 4,

        /// <summary>
        /// Enum Deploying for value: deploying
        /// </summary>
        [EnumMember(Value = "deploying")]
        Deploying = 5,

        /// <summary>
        /// Enum NotDeployed for value: not_deployed
        /// </summary>
        [EnumMember(Value = "not_deployed")]
        NotDeployed = 6,

        /// <summary>
        /// Enum DeletingFailed for value: deleting_failed
        /// </summary>
        [EnumMember(Value = "deleting_failed")]
        DeletingFailed = 7,

        /// <summary>
        /// Enum InvokingAction for value: invoking_action
        /// </summary>
        [EnumMember(Value = "invoking_action")]
        InvokingAction = 8,

        /// <summary>
        /// Enum ActionSucceeded for value: action_succeeded
        /// </summary>
        [EnumMember(Value = "action_succeeded")]
        ActionSucceeded = 9,

        /// <summary>
        /// Enum ActionFailed for value: action_failed
        /// </summary>
        [EnumMember(Value = "action_failed")]
        ActionFailed = 10

    }

}
