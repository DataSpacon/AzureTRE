/*
 * Azure TRE API
 *
 * Welcome to the Azure TRE API - for more information about templates and workspaces see the [Azure TRE documentation](https://microsoft.github.io/AzureTRE)
 *
 * The version of the OpenAPI document: 0.2.14
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using TRE.Rest.Client.Client;
using TRE.Rest.Client.Api;
// uncomment below to import models
//using TRE.Rest.Client.Model;

namespace TRE.Rest.Client.Test.Api
{
    /// <summary>
    ///  Class for testing WorkspacesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WorkspacesApiTests : IDisposable
    {
        private WorkspacesApi instance;

        public WorkspacesApiTests()
        {
            instance = new WorkspacesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WorkspacesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WorkspacesApi
            //Assert.IsType<WorkspacesApi>(instance);
        }

        /// <summary>
        /// Test CreateAWorkspaceApiWorkspacesPost
        /// </summary>
        [Fact]
        public void CreateAWorkspaceApiWorkspacesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WorkspaceInCreate workspaceInCreate = null;
            //var response = instance.CreateAWorkspaceApiWorkspacesPost(workspaceInCreate);
            //Assert.IsType<OperationInResponse>(response);
        }

        /// <summary>
        /// Test DeleteWorkspaceApiWorkspacesWorkspaceIdDelete
        /// </summary>
        [Fact]
        public void DeleteWorkspaceApiWorkspacesWorkspaceIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspaceId = null;
            //var response = instance.DeleteWorkspaceApiWorkspacesWorkspaceIdDelete(workspaceId);
            //Assert.IsType<OperationInResponse>(response);
        }

        /// <summary>
        /// Test GetASingleResourceOperationByIdApiWorkspacesWorkspaceIdOperationsOperationIdGet
        /// </summary>
        [Fact]
        public void GetASingleResourceOperationByIdApiWorkspacesWorkspaceIdOperationsOperationIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspaceId = null;
            //string operationId = null;
            //var response = instance.GetASingleResourceOperationByIdApiWorkspacesWorkspaceIdOperationsOperationIdGet(workspaceId, operationId);
            //Assert.IsType<OperationInResponse>(response);
        }

        /// <summary>
        /// Test GetAllOperationsForAResourceApiWorkspacesWorkspaceIdOperationsGet
        /// </summary>
        [Fact]
        public void GetAllOperationsForAResourceApiWorkspacesWorkspaceIdOperationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspaceId = null;
            //var response = instance.GetAllOperationsForAResourceApiWorkspacesWorkspaceIdOperationsGet(workspaceId);
            //Assert.IsType<OperationInList>(response);
        }

        /// <summary>
        /// Test GetAllWorkspacesApiWorkspacesGet
        /// </summary>
        [Fact]
        public void GetAllWorkspacesApiWorkspacesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllWorkspacesApiWorkspacesGet();
            //Assert.IsType<WorkspacesInList>(response);
        }

        /// <summary>
        /// Test GetWorkspaceByIdApiWorkspacesWorkspaceIdGet
        /// </summary>
        [Fact]
        public void GetWorkspaceByIdApiWorkspacesWorkspaceIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspaceId = null;
            //var response = instance.GetWorkspaceByIdApiWorkspacesWorkspaceIdGet(workspaceId);
            //Assert.IsType<WorkspaceInResponse>(response);
        }

        /// <summary>
        /// Test InvokeActionOnAWorkspaceApiWorkspacesWorkspaceIdInvokeActionPost
        /// </summary>
        [Fact]
        public void InvokeActionOnAWorkspaceApiWorkspacesWorkspaceIdInvokeActionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspaceId = null;
            //string action = null;
            //var response = instance.InvokeActionOnAWorkspaceApiWorkspacesWorkspaceIdInvokeActionPost(workspaceId, action);
            //Assert.IsType<OperationInResponse>(response);
        }

        /// <summary>
        /// Test UpdateAnExistingWorkspaceApiWorkspacesWorkspaceIdPatch
        /// </summary>
        [Fact]
        public void UpdateAnExistingWorkspaceApiWorkspacesWorkspaceIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspaceId = null;
            //ResourcePatch resourcePatch = null;
            //string etag = null;
            //var response = instance.UpdateAnExistingWorkspaceApiWorkspacesWorkspaceIdPatch(workspaceId, resourcePatch, etag);
            //Assert.IsType<OperationInResponse>(response);
        }
    }
}
